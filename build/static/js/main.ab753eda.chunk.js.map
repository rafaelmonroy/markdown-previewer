{"version":3,"sources":["App.js","index.js"],"names":["marked","setOptions","renderer","Renderer","highlight","code","require","highlightAuto","value","gfm","breaks","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","handleChange","bind","assertThisInitialized","rawMarkup","sanitize","__html","event","target","setState","react_default","a","createElement","className","dist_default","id","rows","cols","onChange","name","dangerouslySetInnerHTML","React","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"6QAIAA,IAAOC,WAAW,CAChBC,SAAU,IAAIF,IAAOG,SACrBC,UAAW,SAASC,GAClB,OAAOC,EAAQ,IAAgBC,cAAcF,GAAMG,OAErDC,KAAK,EACLC,QAAQ,QA0FKC,cAtFb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,KACE,ypCAkCJR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKY,UAAYZ,EAAKY,UAAUF,KAAfT,OAAAU,EAAA,EAAAV,CAAAD,IAvCLA,yEA0CJQ,GACR,IAAII,EAAYxB,IAAOoB,EAAM,CAAEK,SAAU,OACzC,MAAO,CAAEC,OAAQF,wCAGNG,GAAO,IACVnB,EAAUmB,EAAMC,OAAhBpB,MACRO,KAAKc,SAAS,CACZT,KAAMZ,qCAKR,OACEsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,MACAD,EAAAC,EAAAC,cAAA,OAAKG,GAAG,OACNL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,WAEFH,EAAAC,EAAAC,cAAA,YACEI,KAAK,KACLC,KAAK,KACLF,GAAG,SACHG,SAAUvB,KAAKM,aACfkB,KAAK,SACL/B,MAAOO,KAAKI,MAAMC,QAGtBU,EAAAC,EAAAC,cAAA,OAAKG,GAAG,UACNL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,YAEFH,EAAAC,EAAAC,cAAA,OACEG,GAAG,UACHK,wBAAyBzB,KAAKS,UAAUT,KAAKI,MAAMC,QAErDU,EAAAC,EAAAC,cAAA,qBAhFQS,IAAMC,WCPlBC,UAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,MAASL","file":"static/js/main.ab753eda.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactFCCtest from \"react-fcctest\";\r\nimport marked from \"marked\";\r\n\r\nmarked.setOptions({\r\n  renderer: new marked.Renderer(),\r\n  highlight: function(code) {\r\n    return require(\"highlight.js\").highlightAuto(code).value;\r\n  },\r\n  gfm: true,\r\n  breaks: true\r\n});\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      text:\r\n        \"# Welcome to my React Markdown Previewer! \\n\" +\r\n        \"## This is a sub-heading... \\n\" +\r\n        \"### And here's some other cool stuff: \\n\" +\r\n        \"Heres some code, `<div></div>`, between 2 backticks. \\n\" +\r\n        \"```\\n\" +\r\n        \"// this is multi-line code: \\n\" +\r\n        \"function anotherExample(firstLine, lastLine) {\\n\" +\r\n        \"  if (firstLine == '```' && lastLine == '```') { \\n\" +\r\n        \"     return multiLineCode; \" +\r\n        \"} \\n\" +\r\n        \" }\\n\" +\r\n        \"``` \\n\" +\r\n        \"You can also make text **bold**... whoa! \\n\" +\r\n        \"Or _italic_. \\n\" +\r\n        \"Or... wait for it... **_both!_** \\n\" +\r\n        \"And feel free to go crazy ~~crossing stuff out~~.\\n\" +\r\n        \"There's also [links](https://www.freecodecamp.com), and \\n\" +\r\n        \"> Block Quotes! \\n\" +\r\n        \"And if you want to get really crazy, even tables: \\n\" +\r\n        \"Wild Header | Crazy Header | Another Header? \\n\" +\r\n        \"------------ | ------------- | -------------\\n\" +\r\n        \"Your content can | be here, and it | can be here.... \\n\" +\r\n        \"And here. | Okay. | I think we get it. \\n\" +\r\n        \"- And of course there are lists. \\n\" +\r\n        \"- Some are bulleted. \\n\" +\r\n        \"- With different indentation levels.\\n\" +\r\n        \"- That look like this. \\n\" +\r\n        \"1. And there are numbererd lists too. \\n\" +\r\n        \"1. Use just 1s if you want! \\n\" +\r\n        \"1. But the list goes on...\\n\" +\r\n        \"- Even if you use dashes or asterisks. \\n\" +\r\n        \"* And last but not least, let's not forget embedded images: \\n\" +\r\n        \"![React Logo w/ Text](https://goo.gl/Umyytc)\\n\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.rawMarkup = this.rawMarkup.bind(this);\r\n  }\r\n\r\n  rawMarkup(text) {\r\n    let rawMarkup = marked(text, { sanitize: null });\r\n    return { __html: rawMarkup };\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { value } = event.target;\r\n    this.setState({\r\n      text: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ReactFCCtest />\r\n        <div id=\"top\">\r\n          <div className=\"top-bar\">\r\n            <p className=\"top-title\">Editor</p>\r\n          </div>\r\n          <textarea\r\n            rows=\"10\"\r\n            cols=\"50\"\r\n            id=\"editor\"\r\n            onChange={this.handleChange}\r\n            name=\"editor\"\r\n            value={this.state.text}\r\n          />\r\n        </div>\r\n        <div id=\"bottom\">\r\n          <div className=\"bottom-bar\">\r\n            <p className=\"bottom-title\">Preview</p>\r\n          </div>\r\n          <div\r\n            id=\"preview\"\r\n            dangerouslySetInnerHTML={this.rawMarkup(this.state.text)}\r\n          />\r\n          <div />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}